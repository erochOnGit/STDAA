/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var E=(n,o)=>{for(var t in o)s(n,t,{get:o[t],enumerable:!0})},p=(n,o,t,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let e of h(o))!f.call(n,e)&&e!==t&&s(n,e,{get:()=>o[e],enumerable:!(r=m(o,e))||r.enumerable});return n};var T=(n,o,t)=>(t=n!=null?d(v(n)):{},p(o||!n||!n.__esModule?s(t,"default",{value:n,enumerable:!0}):t,n)),P=n=>p(s({},"__esModule",{value:!0}),n);var w={};E(w,{default:()=>l});module.exports=P(w);var g=require("obsidian"),i=T(require("path")),l=class extends g.Plugin{constructor(){super(...arguments);this.cursorPos=null}async onload(){console.log("format on drop enabled"),this.registerDragoverEvent(),this.registerDropEvent()}onunload(){console.log("Plugin unloaded")}registerDragoverEvent(){this.registerDomEvent(document,"dragover",t=>{let r=t.target,e=this.getEditorFromTarget(r);e&&this.updateCursorPos(e,t.clientX,t.clientY)})}registerDropEvent(){this.registerDomEvent(document,"drop",t=>{var a;t.preventDefault(),t.stopImmediatePropagation();let r=t.target,e=(a=t.dataTransfer)==null?void 0:a.getData("text");e?this.handleDrop(r,e):console.warn("No text found in drop event.")},!0)}handleDrop(t,r){let e=this.getEditorFromTarget(t);if(!e){console.warn("No editor found for target element.");return}let a=this.getFormattedText(t,r);if(!a){console.warn("Failed to format dropped text.");return}this.insertTextAtCursor(e,a)}updateCursorPos(t,r,e){let a=t.cm;if(!t.containerEl)return;let u=a.posAtCoords({x:r,y:e});t.focus(),this.cursorPos=t.offsetToPos(u)}getEditorFromTarget(t){for(let r of this.app.workspace.getLeavesOfType("markdown")){let e=r.view;if(e.containerEl.contains(t))return e.editor}return null}getFormattedText(t,r){let e=this.getObsidianUrl(t),a=this.extractRelativePath(r);if(!e||!a)return null;let c=this.extractRelativePath(e);return c?`![Image](${this.getRelativePath(c,a)})`:null}getObsidianUrl(t){let r=this.app.workspace.getActiveFile();if(!r)return null;let e=this.app.vault.getName(),a=r.path;return`obsidian://open?vault=${encodeURIComponent(e)}&file=${encodeURIComponent(a)}`}extractRelativePath(t){return new URL(t).searchParams.get("file")}getRelativePath(t,r){let e=i.dirname(t);return i.relative(e,r).split(i.sep).join("/").replace(/ /g,"%20")}insertTextAtCursor(t,r){let e=this.cursorPos||t.getCursor();t.replaceRange(r,e),setTimeout(()=>{t.focus(),t.setCursor({line:e.line,ch:e.ch+r.length})},500)}};
